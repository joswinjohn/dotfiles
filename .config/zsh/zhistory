echo "hello im z0mbi3"
ll
nvim bspwmrc
xrandr | grep connected
xrandr | grep connected 
xrandr | grep ' connected
xrandr | grep ' connected'
nvim .config/i3/xrandr.sh
picom || { picom --config "${HOME}"/.config/bspwm/src/config/picom.conf & }
picom --xrender-sync-fence
picom -f
picom --config "${HOME}"/.config/bspwm/src/config/picom.conf --xrender-sync-fence
picom --config "${HOME}"/.config/bspwm/src/config/picom.conf --xrender-sync-fence --experimental-backend
cd joswin
cp ~/.RiceBackup/picom_20250227-224741/ -r .
mv picom_20250227-224741 picom
picom --experimental-backends --backend glx --xrender-sync-fence
nvim i3
./.config/i3/xrandr.sh
Qexit
poweroff
killall bspwm
nvim .xinitrc
echo $TERM
cd themes
neofetch --height
neofetch --height 12
neofetch --height 1
neofetch --help
neofetch --size 00
neofetch --size 10%
neofetch --size 100%
neofetch --size 50%
neofetch --size 50px
neofetch --size 500px
ps aux | grep picom
cd yazi
echo ${EDITOR:-nvim} "$@"
nvim yazi.toml
nvim kitty/kitty.conf
$ git clone --depth=1 https://github.com/adi1090x/rofi.git
git clone --depth=1 https://github.com/adi1090x/rofi.git
cd rofi
chmod +x setup.sh
./setup.sh
rofi
rofi --help
rofi +drun
rofi -show drun
cd ~/.config/rofi
pkexec
powertop
sudo pacman -S powertop
sudo pacman -S xfce4-power-manager-settings
sudo pacman -s .
sudo pacman -S xfce4-power-manager
acpi
sudo pacman -S acpi
cd applets/shared
nvim theme.bash
nvim style-1.rasi
cd ~/.config
cd polybar.old
cd bspwm
find polybar
find . polybar
find ./ -name polybar
find ./ -name config
find ./ -name config.ini
cd rices
nvim andrea/theme-config.bash
nvim andrea/config.ini
nvim isabel/config.ini
cp ../bspwm/rices/isabel/config.ini .
l ../bspwm/rices/isabel/config.ini
cp ../polybar.old/launch.sh .
cp ~/.config/bspwm/src/config/system.ini .
find ../bspwm -name modules.ini
cp ../bspwm/rices/isabel/modules.ini .
ckear
i3
cd .coni3
alacritty
cls
./xrandr
./xrandr.sh
xtyerm
xterm
DISPLAY=:0 i3-dump-log
DISPLAY=:0 i3-dump-log > out.log
nvim out.log
rm out.log
yazi
rm RiceInstaller
nvim RiceError.log
feh --bg-scale mysterious-Lain.png
feh --bg-fit mysterious-Lain.png
feh --bg-fill mysterious-Lain.png
cd .config/nvim
grep -rnw ./ -e 'latex'
grep -rnw ./ -e 'vimtex'
grep -rnw ./ -e 'pdf'
grep -rnw ./ -e 'tex'
cp ~/.RiceBackup/nvim_20250227-224741/lua/plugins/latex.lua .
l ~/.RiceBackup/nvim_20250227-224741/lua/plugins/latex.lua
l ~/.RiceBackup/nvim_20250227-224741/lua/plugins/
nvim ~/.RiceBackup/nvim_20250227-224741/lua/plugins/
cd shared
./launcher_t13
./launcher_t3
nvim launcher_t13
nvim launcher_t3
cd ../nvim
nvim keymaps.lua
cd hypr
cp ../hypr/monitor.cpp .
nvim xrandr.sh
g++ -o monitor monitor.cpp
picom --help | grep anim
sudo pacman -Rns picom
sudo pacman -S uthash
sudo pacman -S xcb
sudo pacman -S libxcb
rm -r picom
git clone https://github.com/pijulius/picom
sudo pacman -S asciidoctor
meson setup --buildtype=release build
ninja -C build
ninja -C build install
picom --help | grep animation
picom --help
sudo pacman -S dunst
picom --experimental-backend --daemon --config --animations --animation-window-mass 0.5 --animation-for-open-window zoom --animation-swiftness 350 $HOME/.config/picom/picom.conf
picom --experimental-backend --daemon --config --animations --animations $HOME/.config/picom/picom.conf
picom --experimental-backend --daemon --config --animations $HOME/.config/picom/picom.conf
ninja -C build uninstall
sudo ninja -C build uninstall
picom
sudo pacman -S picom
cd ~/.config/i3
picom --experimental-backend --daemon --config $HOME/.config/picom/picom.conf
picom --version
mv polybar.old polybar.old
nvim johnbar.log
cp ../.RiceBackup/polybar_20250227-224741 -r ./polybar
mv ~/Downloads/picom-animations.conf
mv ~/Downloads/picom-animations.conf .
cat picom.conf
locate dunstrc
mkdir dunst
cd dunst
mv ~/Downloads/dunstrc.txt ./dunstrc
feh --bg-center sample_f3cb32685c77db8fc8f4b4f5c32c3057.jpg
feh --bg-scale sample_f3cb32685c77db8fc8f4b4f5c32c3057.jpg
feh --bg-fill sample_f3cb32685c77db8fc8f4b4f5c32c3057.jpg
feh --bg-seamless sample_f3cb32685c77db8fc8f4b4f5c32c3057.jpg
feh --bg-fill f3cb32685c77db8fc8f4b4f5c32c3057.jpg
feh --bg-fill f3cb32685c77db8fc8f4b4f5c32c3057.jpeg
feh --bg-scale f3cb32685c77db8fc8f4b4f5c32c3057.jpeg
cd Pictures/Wallpapers
feh --bg-fill vagabond.png
cd ~git
git clone https://aur.archlinux.org/xborder-git.git
cd xborder-git
nvim PKGBUILD
sudo pacman -S --needed 'libwnck3' 'gtk3' 'python' 'python-cairo'
echo $pkgdir
instructions
mv xborders /usr/bin/
sudo mv xborders /usr/bin/
xborders --version
rm -r xborder
rm -r xborder-git
cd ../.config/picom
killall picom
xprop | grep CLASS
xprop | grep NAME
xborders --border-radius 10 --border-width 5 --border-rgba #340c38
xprop | grep xborder
git clone https://github.com/deter0/xborder
xprop | grep ROLE
xprop | grep TYPE
i3-msg -t get_tree
i3-msg -t get_tree | grep xborder
rm dump.json
xborders --border-radius 10 --border-width 10 --border-rgba #340c38
touch xborder.json
nvim xborder.json
i3-msg -t get_tree | grep xborder > dump.json
nvim dump.json
i3-msg -t get_tree | grep xborder > dump2.json
nvim dump2.json
nvim ~/tmp/dump.json
xborders --help
sudo nvim xborders
ping google.com
sudo pacman -Rns nvidia-dkms
sudo pacman -S nivida
sudo pacman -Rns sbctl
sudo pacman -S nvidia
cd data
cd ../..
find . -name 'settings'
find . -name 'settings.json'
sudo pacman -S gpick
gpick
cd xborder
sudo pacman -S --needed gtk3
sudo pacman -S --needed gtk4
sudo pacman -S --needed gtk2
sudo pacman -S --needed gtk1
sudo pacman -S --needed gtk
sudo pacman -S --needed gdk
sudo pacman -S --needed gdk3
nvim requirements.txt
./xborders
nvim xborders
i3-msg -t get_tree | grep xborder > dump3.json
sudo pacman -S atk
nvim /usr/bin/xborders
sudo pacman -S python-cairo
git clone https://gitlab.gnome.org/GNOME/pygobject/
cd pygobject
grep -rnw ./ -e 'role'
grep -rnw ./ -e 'set_wmclass'
grep -rnw ./ -e 'Gtk.Window.class'
grep -rnw ./ -e 'Gtk.Window.set'
grep -rnw ./ -e 'Gtk.Window.set_'
grep -rnw ./ -e 'Gtk.Window.set_role'
grep -rnw ./ -e 'Gtk.Window.'
grep -rnw ./ -e 'Gtk.Window'
loc
grep -rnw ./ -e 'set_role()'
grep -rnw ./ -e 'set_role('
grep -rnw ./ -e 'set_role'
vim ~/dump3.json
nvim ~/dump3.json
cd ~/.local/share
cd applications
nvim reboot.desktop
cp poweroff.desktop xborders.desktop
nvim xborders.desktop
rm dump4.json
ps aux | grep xborder
nvim dump3.json
i3-msg -t get_tree | grep xborder > dump4.json
nvim dump4.json
xborders -c $HOME/.config/picom/xborder.json
xwininfo
sudo nvim /usr/bin/xborders
rm dump3.json dump4.json
rm dump*
cd .config/picom/l
cp picom-animations.conf picom-ani.conf
nvim picom-ani.conf
cd .config/picom/
rm picom-ani.conf
rm RiceError.log
rm -r MaterialFox
rm -r LiveSplitOne
sudo pacman -S autorandr
autorandr --save docked
xrandr --output HDMI-0 --off
autorandr --save mobile
autorandr --change
./.config/i3/monitor
sudo pacman -Rns autorandr
locate nvidia-dkms
locate dkms
sudo pacman -Qs
sudo pacman -Qe nvidia
sudo pacman -Qe nvidia-dksa
sudo pacman -Qe nvidia-dkms
sudo pacman -Qe ndkms
sudo pacman -Qe dkms
sudo pacman -Qe
sudo pacman -Qe | grep nvidia
sudo pacman -Rns nvidia-prime-rtd3pm
cat /sys/class/drm/card*/device/power_state
cat /sys/bus/pci/devices/0000:01:00.0/power/runtime_status~
echo cat
$ grep "No modes" ~/.local/share/xorg/Xorg.0.log
grep "No modes" ~/.local/share/xorg/Xorg.0.log
cd java-21-openjdk
cd jre
xclip -o | echo
export LD_LIBRARY_PATH=/usr/lib/jvm/java-21-openjdk/lib
echo $LD_LIBRARY_PATH
nvim /etc/modprobe.d/nvidia-pm.conf
cat /sys/bus/pci/devices/0000:01:00.0/power/runtime_status
cat /sys/bus/pci/devices/0000:01:00.0/power/runtime_suspended_time\

nvim /etc/udev/rules.d/80-nvidia-pm.rules
cd /etc/udev/rules.d
/etc/udev/rules.d/00-remove-nvidia.rules
nvim /etc/udev/rules.d/00-remove-nvidia.rules
sudo pacman -S jdk8-openjdk
cd /usr/bin
l | grep java
cd ../lib
cd jvm
./java --version
./java -v
./monitor
cd /usr/lib/jvm
cd java-8-openjdk
cd bin
./java --help
./javah --help
archlinux-java --help
archlinux-java set java-8-openjdk
sudo archlinux-java set java-8-openjdk
java --version
sudo archlinux-java set java-21-openjdk
sudo archlinux-java status
java --help
cat /proc/driver/nvidia/gpus/0000:01:00.0/power
echo auto
sudo pacman -Rns nvidia
sudo pacman -Qdtq
sudo pacman -S nvidia-open
nvim /etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf
xrandr --setprovideroutputsource modesetting NVIDIA-0
lspci | grep VGA
prime
optimus
optimus-manager
cd /var/log
cd /usr/src/debug/
rm -r optimus-manager-qt
sudo pacman -Rns optimus-manager-qt-debug
sudo pacman -Rns optimus-manager-qt
yay -Rns optimus
yay -Rns optimus-manager-qt
yay -Rns optimus-manager-git
yay -Rns optimus-manager
cd /var/lib
rm -r optimus-manager
y
sudo rm -r optimus-manager
locate optimus
locate prime
flatpak uninstall prime
flatpak uninstall org.freedesktop.Platform.GL.nvidia-570-86-16
flatpak uninstall org.freedesktop.Platform.GL32.nvidia-570-86-16
flatpak uninstall org.freedesktop.Platform.GL.nvidia-565-77
flatpak uninstall org.prismlauncher.PrismLauncher
cp 189 -r ~/tmp
sudo pacman -Rns prismlauncher
sudo pacman -S prismlauncher
mv ~/tmp/189 .
sudo pacman -Qe | prime
sudo pacman -Qe | grep prime
sudo pacman -Qs | grep prime
sudo pacman -Qs prime
sudo pacman -Qe prime
sudo pacman -Qs prime-run
cmatridx
nvim picom-animations.conf
sudo pacman -R polybar
yay -S polybar-git
l | grep poly
cd ~/tmp
git clone https://github.com/polybar/polybar
cd components
nvim renderer.cpp
sudo rm -r polybar
sudo pacman -S polybar
rm -r poly.b
cp polybar -r poly.b
rm -r polybar
cd ~/git
git clone git clone https://github.com/imreyesjorge/clean-polybar
git clone https://github.com/imreyesjorge/clean-polybar
cd clean-polybar
cp polybar/config ~/.config/polybar/
cp polybar/config -r ~/.config/polybar/
cp polybar/config -r ~/.config/polbar
cd ~/.config/polybar
l polybar
l ~/.config | grep config
cd ~/.config/
l | grep pol
mkdir polybar
mv polbar polybar/config
cp ../poly.b/launch.sh .
mv config config.ini
mv config.ini config
'(lsb_release -d | awk {'print $2'} ;echo " "; lsb_release -r | awk {'print $2'}) | tr -d '\n''
(lsb_release -d | awk {'print $2'} ;echo " "; lsb_release -r | awk {'print $2'}) | tr -d '\n'
mv poly.b polybar
sudo pacman -S cava
yay -S polybar-spotify-module
systemctl --user enable spotify-listener
systemctl --user start spotify-listener
git clone https://github.com/cassidymwagner/dotfiles/tree/master
git clone https://github.com/cassidymwagner/dotfiles
git clone https://github.com/cassidymwagner/dotfiles -o cas
git clone https://github.com/cassidymwagner/dotfiles cas
cd cas
rm -r bak
cp polybar -r ~/.config
nvim launch.sh
rm -rf cas
rm -rf polybar
mv polybar polybar.old
mv polybar.old polybar
cd kitty
cava --help
sudo pacman -S btop
cd .config/
mkdir btop
cd btop
wget https://raw.githubusercontent.com/dcindallas/dots/refs/heads/main/btop/btop.conf
wget https://raw.githubusercontent.com/dcindallas/dots/refs/heads/main/btop/btop.log
cd cava
rm config
wget https://raw.githubusercontent.com/dcindallas/dots/refs/heads/main/cava/config
wget https://raw.githubusercontent.com/cassidymwagner/dotfiles/refs/heads/master/.config/polybar/scripts/song.sh
chmod +x scripts/song.sh
nvim song.sh
wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FontPatcher.zip
mkdir font
cd font
mv ../FontPatcher.zip .
unzip FontPatcher.zip
fontforge -script font-patcher /usr/share/fonts/apple-fonts/SF-Pro-Display-Regular.otf
sudo cp /usr/share/fonts/apple-fonts/SF-Pro-Display-Regular.otf .
rm SFProDisplayNerdFont-Regular.otf
sudo chown joswin:joswin SF-Pro-Display-Regular.otf
chmod a+r SF-Pro-Display-Regular.otf
fontforge -script font-patcher SF-Pro-Display-Regular.otf
mv SFProDisplayNerdFont-Regular.otf ~/.local/share/fonts
fc-list | grep SFPro
sudo pacman -S ttf-arimo-nerd
rm -rf font
nvim scripts/song.sh
curl -fsSL https://raw.githubusercontent.com/spicetify/cli/main/install.sh | sh
.spicetify
cd .spicetify
spicetify backup apply
./spicetify backup apply
spicetify apply
sudo ./spicetify apply
sudo chmod a+r /opt/spotify/Apps/login.spa
sudo chmod a+rw /opt/spotify/Apps/*
sudo chmod 777 /opt/spotify -R
./spicetify apply
spicetify restore
rm -rf ~/.spicetify
rm -rf ~/.config/spicetify
nvim .config/kitty/kitty.conf
nvim .config/kitty/current-theme.conf
mv Downloads/lain.jpg Pictures/Wallpapers
cd Pictures
feh --bg-fill ~/Documents/vibhav.jpg
cd ~/Downloads
rm f3cb32685c77db8fc8f4b4f5c32c3057.jpeg
rm sample_f3cb32685c77db8fc8f4b4f5c32c3057.jpg
sudo pacman -S cool-retro-term\

sudo pacman -S Komorebi
sudo pacman -S komorebi
nvim ~/.config/rofi/launchers/type-3/launcher.sh
nvim style-3.rasi
nvim launcher.sh
nvim $HOME/.config/rofi/launchers/type-3/style-8.rasi
cd .config/btop
rm btop.conf
rm btop.log
cmartix
cmatrix
conky
sudo pacman -S vtop
sudo pacman -S ytop
sudo pacman -S nmon
nmon
bat
sudo pacman -S age
age
sudo pacman -S croc
df -h
sudo pacman -S qalculate
sudo pacman -S qalculate-gtk
sudo pacman -S qrencode
qrencode
qrencode https://joswinjohn.com
qrencode https://joswinjohn.com -o out.png
feg out.png
feh out.png
rm out.png
sudo pacman -S zbar
bat xsettingsd
sudo pacman -S mc
10
q
2
Menu
[<0;80;34Mqexit
git clone https://github.com/DeadNews/mc-onedark
cd mc-onedark
mv skins ~/.local/share/mc/
mv config ~/.config/mc
cd ~/.config/mc
cd config
rm ini
rm panels.ini
mv config/* .
rm -r config
echo $VIRTUAL
echo $EDITOR
4
cd .tmux
grep -rnw ./ -e 'top'
nvim .tmux.conf.local
nvim .tmux
cd plugin
nvim .tmux.conf
cd tmux
cd tpm
nvim tpm
nvim tmux.conf
cool-retro-term --help
cool-retro-term -pl Vintage
cool-retro-term -pl IBM Dos
cool-retro-term -pl
cool-retro-term -h
cool-retro-term -p Vintrage
cool-retro-term -p Vintage
cool-retro-term -p bloomed
cl;ear
nvim joswin_pc.ovpn
cd neofetch
mv config.conf config.conf.old
wget https://raw.githubusercontent.com/Chick2D/neofetch-themes/refs/heads/main/small/simplefetch.conf
mv simplefetch.conf config.conf
nvim config.conf
cd .config/rofi
cd launchers
cd type-3
nvim style-8
nvim style-8.rasi
cd i3
xrandr --output HDMI-0 --mode 1920x1080 --pos 0x180 --rotate normal --output DP-0 --mode 1920x1080 --pos 4480x180 --rotate normal --output DP-1 --primary --mode 2560x1440 --pos 1920x0 --rotate normal
nvim monitor.cpp
pushd ~/.config/nvim
nvim completions.lua
sudo systemctl status clangd
sudo systemctl status clang
sudo pacman -S clangd
mount | grep noexec
sudo pacman -Rns clangd
sudo pacman -Rns shiboken
sudo pacman -Rns shiboken6
sudo pacman -Rns pyside6
sudo pacman -R clang
sudo pacman -Rns protonup-qt
sudo pacman -Rns clang
sudo pacman -S clang
nvim
nvim neo-tree.lua
nvim treesitter.lua
nvim plugins.lua
nvim vim-options.lua
nvim init.lua
grep -rnw ./ -e 'lsp'
grep -rnw ./ -e 'mason'
grep -rnw ./ -e 'lspconfig'
cd lua
cd plugins
nvim lsp-config.lua
xrandr | grep ' connected' | awk '{print $2}'
xrandr | grep ' connected' | awk '{print $3}'
xrandr | grep ' connected' | awk '{print $4}'
xrandr | grep ' connected' | awk '{print $1}'
nvim ~/.config/i3/monitor.cpp
cp johninstall -r fehui
rm *
rm -f *
sudo rm -rf *
sudo rm -rf ./*
sudo rm ./*
rm -rf ./.*
c d..
sudo pacman -S clang-tidy
sudo pacman -S cppcheck
sudo pacman -S doxygen
sudo pacman -S LCOV
sudo pacman -S clang-format 18
sudo pacman -S clang-format-18
sudo pacman -S codespell
rm -r fehui
cmake-init fehui
cd camke
rm -r build
nvim cmake/prelude.cmake
rm -r test
grep -rnw ./ -e 'test'
nvim cmake/lint.cmake
nvim cmake/lint-targets.cmake
cd .git
cd hooks
nvim description
nvim HEAD
rm -r .git
rm -r .github
rm -r CODE_OF_CONDUCT.md
./fehui
git commit -m "initalize cmake"
git branch -M main
git remote add origin https://github.com/joswinjohn/fehui.git
cd .config/kitty/
mc
_command_buffer () { printf "%s\\n" "$BUFFER" >&12; }
ls | grep gtk
nvim .gtkrc-2.0
echo ${aur_apps[@]}
echo $pkg
xqp ttf-maple
xqp vim
xqp wdawd
xqp --help
xqp -h
xqp xwinwrap-0.9-bin ttf-maple
xqp kitty
xqp 00400360
xqp 0x00400360
xqp -v 0x00400360
xqp -v kitty
xqp -v
xqp
xqp 1
xqp ::1
xqp ::0
wmctrl -lp
xqp 269509
xqp 0x0360000
xqp 0x0360000b
xqp 0360000b
xqp 0
cd .config/dunst
nvim ../i3/config
dunst -config ~/.config/dunst/dunstrc
nvim dunstrc
fc-list | Term
fc-list | grep Term
pkill dunst
nvim .config/dunts/dunstrc
nvim .config/dunsts/dunstrc
nvim .config/dunst/dunstrc
cealr
cd fehui
exiot
rm -Cu
rm Cursor-0.46.8-be4f0962469499f009005e66867c8402202ff0b7.deb.glibc2.25-x86_64.AppImage
sudo pacman -S 
sudo pacman -S cursor-bin
sudo pacman -S cursor_bin
yay -S cursor-bin
sudo pacman -S paru
sudo pacman -Rns yay
paru -Rns yay
yay -R yay
sudo pacman -Qs yay
sudo pacman -Rns yay-git
paru -Q
paru -Qe
paru -Syyu
paru -S cursor-bin
cursor --help
nvim xsettingsd
feh --bg-scale ~/Pictures/Wallpapers/totoro.png
feh --bg-center ~/Pictures/Wallpapers/totoro.png
feh --bg-tile ~/Pictures/Wallpapers/totoro.png
feh --bg-fill ~/Pictures/Wallpapers/totoro.png
cd .mozilla/firefox
nvim userContent.css
sudo pacman -Rns firefox
sudo pacman -S firefox
rm -rf .mozilla/
paru -S https://addons.mozilla.org/en-US/firefox/addon/arc-dark-theme-we/
paru -S floorp
git clone https://github.com/KiKaraage/ArcWTF/
mv ArcWTF git
sudo updatedb
find . -name 'floorp'
find . -name 'Floorp'
cd ArcWTF-floorp
cd 
rm userChrome.css
rm userContent.css
mv * ~/.floorp/pt62qk4t.default-nightly/chrome
git clone https://github.com/bmFtZQ/edge-frfox
cd eg
cd edge-frfox
l;
cd Downloads
mkdir fonts
mv segoe-ui-variable-cufonfonts.zip fonts
cd fonts
unzip segoe-ui-variable-cufonfonts.zip
mv SegoeUIVF.ttf ~/.local/share/fonts
fc-cache
fc-list 
fc-list | grep Cus
fc-list | grep Cuf
fc-list | grep Cufon
cd .config/i3
cd .config/picom
xwininfo -shape
cat  ~/.config/gtk-3.0/gtk.css
cd gtk-3.0
nvim gtk.css
cd picom
cd .floorp
mv ~/Downloads/Background-1.png
mv ~/Downloads/Background-1.png .
cd ~/.config/picom
nvim picom-animations.conf picom.conf
nvim  picom.conf
cd /home/joswin/.floorp/pt62qk4t.default-nightly/newtabImages/
mv ../chrome/Background-1.png .
mv Background-1.png wallpaper.png
mv Background-1.png wallpaper.pngSegoe UI Variable
fc-list | grep Segoe UI Variable
fc-list | grep Segoe UI
fc-list | grep "Segoe UI"
cd ArcWTF
cd ../../.floorp
cd pt62qk4t.default-nightly
cd chrome
mv ~/Downloads/ArcWTF-floorp\ \(2\).zip
mv ~/Downloads/ArcWTF-floorp\ \(2\).zip .
mv ArcWTF-floorp\ \(2\).zip arc.zip
unzip arc.zip
rm arc.zip
mv ArcWTF-floorp/* .
l ArcWTF-floorp
rm -r ArcWTF-floorp
nvim user.js
neofetch
gtop
cava
\:q
sudo pacman -S xf86-input-synaptics
git clone https://github.com/aLEGEND21/BrainrotLang
cd BrainrotLang
tmux
mkdir BrainrotC
cd BrainrotC
ls -l
ls -al
cd BrainrotC/
touch main.c
rm -rf BrainrotC
rm -rf BrainrotLang
git clone https://github.com/joswinjohn/BrainrotLangC
g++ main.c
sh -c "$(curl -sS https://raw.githubusercontent.com/Vendicated/VencordInstaller/main/install.sh)"
paru -S zen-browser-bin
wget https://joswinjohn.com/files/IMG
wget https://joswinjohn.com/files/IMG_1855.jpg
jp2a --size=60x30 --colors --color-depth=24 IMG_1855.jpg
jp2a --size=60x40 --colors --color-depth=24 IMG_1855.jpg
jp2a --size=80x30 --colors --color-depth=24 IMG_1855.jpg
jp2a --size=100x30 --colors --color-depth=24 IMG_1855.jpg
jp2a --size=100x40 --colors --color-depth=24 IMG_1855.jpg
cd .config/kitty
nvim current-theme.conf
nvim kitty.conf
ps aux | Frag
ps aux | grep Frag
ps aux | grep Fragpunk
pkill steam.exe
pkill FragPunk
pkill FragPunk.exe
ps aux | grep FragPunk
picom --daemon --config $HOME/.config/picom/picom.conf
nvim .config/picom/picom.conf
cd .config/i3/con
nvim config
xrandr --output HDMI-0 --mode 1920x1080 --pos 0x180 --rotate normal --output DP-0 --mode 1920x1080 --pos 4480x180 --rotate normal --output DP-1 -r 165 --primary --mode 2560x1440 --pos 1920x0 --rotate normal
nvim .config/i3/config
nvim .config/i3/monitor.cpp
cd .config/i3/
rm monitor
g++ monitor.cpp
mv a.out monitor
xrandr
l ..
time gcc main.c && ./a.out
time (./a.out)
nvim replace.h -x c
nvim -x creplace.h
nvim -x c replace.h
nvim -xc replace.h
nvim compile_flags.txtr
nvim compile_flags.txt
nvim ~/.config/nvim/lua/plugins/lsp-config.lua
time (gcc main.c && ./a.out)
sudo pacman -S nodejs
sudo pacman -S typescript
sudo pacman -S typescript-language-server
g++ t.cpp
nvim t.cp
nvim t.cpp
g++ t.cpp && ./a.out
rm t.cpp
nvim main.ts
time tsc main.ts
rm compile_flags.txt
rm main.js
rm main.ts
nvim replace.h
nvim out.c
rm replace.h
tsc out.ts
node main.js
nvim out,js
;
touch out.js
chmod a+w out.ks
chmod a+w out.js
nvim ~/johninstall/src/sysread.hpp
/bin/tsc out.ts
/bin/cat
/bin/cat /home/joswin/git/BrainrotLangC/out.ts
rm out.ks
rm out.ts
gcc main.c && ./a.out
nvim a.out
time tsc out.ts
time node main.js
cpp main.c
cpp main.c | tee out.c
time gcc out.c
time cpp main.c > out.c
rm out.c
nvim out.ks
node out.ts
nvim out.ts
time node out.ts
gcc main.c
time a.out
time ./a.out
node out.js
time node out.js
brlc
./brlc
./brlc out.ts
gcc main.c -o brlc
gcc main.c -o brlc && ./brlc /home/joswin/git/BrainrotLangC/test.br
gcc main.c -o brlc && ./brlc test.br
nvim testc.
gcc test.c
mv test.br test.txt
mv test.txt t.c
nvim test.bvr
nvim test.br
mv test.br t.c
nvim t.c
rm t.c
gcc test.c && ./a.out
rm test.c
nvim mainc.
rm out*
./brlc test.br
gcc main.c -o brlc && ./brlc test.brld
time ./brlc test.brl
nvim .giclear
nvim test.brl
sudo pacman -S gnuplot
nvim brlc.h
nvim test.c
nvim ~/.config/i3/config
clipse -listen
strace -c gcc main.c
time gcc main.c
strace -c gcc main.c | awk '{print $3}'
strace -c gcc main.c | awk 'total {print}'
strace -c gcc main.c | awk '/total/ {print}'
strace -c gcc main.c | awk '{print $1}'
strace gcc main.c
strace -c -s time-total gcc main.c
strace -c -s time gcc main.c
strace -c -s=time gcc main.c
strace -c -stime gcc main.c
strace -c -S errors gcc main.c
strace -c -S time-total gcc main.c
strace -c gcc main.c | tail
strace -c gcc main.c | tail -n 1
strace -c gcc main.c | tail 1
strace -c gcc main.c | tail -1
strace -c gcc main.c | grep "total"
strace -c gcc main.c | grep "elpased"
strace -c gcc main.c 2>&1 | grep "total"
strace -c gcc main.c 2>&1 | awk {print $1)
strace -c gcc main.c 2>&1 | awk {print $1}
strace -c gcc main.c 2>&1 | awk '{print $1}'
strace -c gcc main.c 2>&1 | awk '{print $2}'
gcc main.c -o brlc && ./brlc test.brl
pkill discord
pkill Discord
gprof
gprof main.c
gprof brlc out.js
gprof "brlc test.brl"
nvim out.js
gprof brlc
gprof brlc > test.txt
gprof ./brlc > test.txt
gcc main.c -pg -o brlcprof
./brlcprof
./brlcprof test.brl
gprof ./brlcprof > test.txt
nvim test.txt
rm brlcprof
rm test.txt
rm gmon.out
rm out.js
bc
sudo pacman -S bc
echo "4+3" | bc
./brlc test.brl | awk '{print $2}'
./brlc test.brl | awk 'NR=1{print $3}'
./brlc test.brl | awk 'NR=0{print $3}'
./brlc test.brl | awk 'NR==2 {print $3}'
./brlc test.brl | awk 'NR==0 {print $3}'
./brlc test.brl | awk 'NR==1 {print $3}'
./brlc test.brl | awk '{print $3}'
read
xclip -o
output=$(./brlc test.brl | awk '{print $3}')\
    set -o noglob         # See special Note, below.\
    IFS=$'\n' bar=($output)\
    set +o noglob \
    echo "[0] = $(bar[0])"\

chmod +x profile.sh
nvim pro
echo "0 + 0.000139" | bc
echo ".008169 / 100" | bc
echo "scale=2; .008169 / 100.0" | bc
echo "scale=2; .008169 / 100" | bc
echo "scale=8; .008169 / 100" | bc
echo "scale=7; .008169 / 100" | bc
echo "scale=10; .008169 / 100" | bc
echo "scale=9; .008169 / 100" | bc
nvim comp_sum.dat
nvim prof
./profile.sh 100
rm comp_sum.dat exec_sum.dat
nvim exec_sum.dat
nvim profile.sh
rm comp_sum.dat
rm exec_sum.dat
./profile.sh
mv comp_sum.dat comp_times.csv
mv exec_sum.dat exec_times.csv
nvim comp_times.csv
./a.out
gcc plot.c
gcc plot.c -o plotter
./plotter
rm plotter
rm compile_times.svg
nvim plot.c
mv plot.c comp_plot.c
cp comp_plot.c exec_plot.c
gcc comp_plot.c
nvim exec_plot.c
gcc exec_plot.c -o exec_plotter
./exec_plotter
rm exec_plotter
nvim averages.txt
rm averages.txt
nvim ~/.config/nvim/lua/plugins/markdown.lua
sudo pacman -S gthump
sudo pacman -S gthumb
chmod a+w comp_times.svg
chmod a+w exec_times.svg
feh comp_times.svg
feh exec_times.csv
feh exec_times.svg
git commit -m "plots"
cd git/BrainrotLangC
git commit -m "update readme"
tartx
git clone https://github.com/joswinjohn/BrainrotLangTest
cd BrainrotLangC/l
cp BrainrotLangTest BrainrotLangC-web
cp BrainrotLangTest -r BrainrotLangC-web
ls BrainrotLangC-web
gcc comp_plot.c -o comp_plotter
./comp_plotter
nvim comp_plot.c
rm comp_plotter
cp main.c brlc.c
sudo pacman -S blueberry
wget https://github.com/msaitz/polybar-bluetooth/raw/refs/heads/master/bluetooth.sh
wget https://github.com/msaitz/polybar-bluetooth/raw/refs/heads/master/toggle_bluetooth.sh
cd polybar
chmod a+x toggle_bluetooth.sh
chmod a+x bluetooth.sh
sudo pacman -S bluetoothctl
sudo pacman -S bluez-utils
./launch.sh
cd scripts
nvim toggle_bluetooth.sh
./bluetooth.sh
nvim bluetooth.sh
clipse
echo "%{F#66ffffff}󰂯"
./toggle_bluetooth.sh
sudo systemctl stop bluetooth
cd .config/polybar
nvim ocn
nvim config.ini
sudo systemctl status bluetooth
sudo pacman -S blueman
lsmod
lsmod | grep blue
sudo systemctl status bluez
bluetoothd
sudo systemctl start bluetooth
bluetoothctl
clang main.c -o brlc
sudo pacman -S emscripten
cd BrainrotLangC-web
cp ../BrainrotLangC/brlc.c .
mkdir wasm
mv brlc.c wasm
cp ../../BrainrotLangC/test.brl .
emcc
sudo ln -s /usr/lib/emscripten/emcc /usr/local/bin/
sudo ln -s /usr/lib/emscripten/emcc.py /usr/local/bin/
emcc brlc.c -o brlc.html
nvim brlc.html
pwd brlc.html
nvim brlc.js
rm brlc.html
rm brlc.js
nvim brlc.wasm
rm brlc.wasm
emcc -v
pushd ../../BrainrotLangC
gcc -02 main.c -o brlc
gcc -O2 main.c -o brlc
strace -c gcc main.c 2>&1 | awk 'END{print $2}'
rm a.out
gcc -Ofast main.c -o brlc
gcc -O3 main.c -o brlc
./brlc test.brl
node --version
npm install -g n
sudo npm install -g n
nvim package.json
mv BrainrotLangC-web/wasm .
node a.out.js
emcc brlc.c
nvim a.out.js
cd BrainrotLangC
cd wasm
nvim brlc
pushd ~/.config/nvim/lua/plugins
nvim discord.lua
rm a.out.js
rm a.out.wasm
git clone https://github.com/CraneStation/wasi-libc.git
rm -rf wasi-libc
sudo pacman -S wasi-libc
nvim brlc.c
coredumpctl
gamescope --help
sudo pacman -Syyu
sudo pacman -S lib32-vkd3d
sudo pacman -S lib32-vulkan-icd-loader
sudo pacman -S mangohud
sudo pacman -S vkd3d
sudo pacman -S vulkan-extra-layers
sudo pacman -S vulkan-extra-tools
sudo pacman -S vulkan-icd-loader
sudo pacman -S vulkan-tools
sudo pacman -S vulkan-validation-layers
sudo pacman -Qs vulkan
vulkaninfo --summary
echo $STEAM_HOME
sudo nvim /etc/default/grub
startx 
sysctl nvidia-drm.modeset
nvim /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo pacman -S nvidia-drm
cat /sys/module/nvidia_drm/parameters/modeset
sudo cat /sys/module/nvidia_drm/parameters/modeset
sudo setcap 'cap_sys_nice=eip' /usr/bin/gamescope
gamescope -e fragpunk
vkcube
gamescope -h 1920 -w 1080 -- vkcube
sudo pacman -S gixgears
sudo pacman -S mesa
gixgears
sudo pacman -S mesa-demos
sudo pacman -Ss mesa
glxinfo
i ~ % pkgfile glxinfo
sudo pacman -S pkgfile
pkgfile glxinfo
pkgfile --update
sudo pkgfile --update
pkgfile glxgears
sudo pacman -S mesa-utils
glxgears
gamescope -h 1920 -w 1080 -- gixgears
prime-run
__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia __VK_LAYER_NV_optimus=NVIDIA_only gamescope -e -f -- steam
gamescope -h 1920 -w 1080 --backend sdl -- gixgears
gamescope -h 1920 -w 1080 --backend sdl -- vkcube
gamescope --prefer-vk-device 10de:2520 -- vkcube
lspci -nn | grep "VGA compatible controller"
VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/nvidia_icd.json gamescope -- vkcube
cat /proc/fb
nvidia-smi
sudo pacman -S downgrade
sudo pacman -Qs nvidia
sudo pacman -Rns hyprland
sudo pacman -Rns wofi
sudo pacman -Rns xorg-wayland
sudo pacman -Rns xorg-server-xwayland
sudo pacman -Rns xorg-xwayland
sudo pacman -Rns hyprpapr
sudo pacman -Rns hyprpaper
sudo pacman -Rns lib32-mesa
sudo pacman -R lib32-wayland
sudo pacman -Rns lib32-wayland
gamescope --backend wayland -- vkcube
downgrade --help
downgrade gamescope 3.14.1
sudo downgrade gamescope 3.13.16
cd /var/cache/pacman/pkg
l | grep gamescope
pacman -U file:///var/cache/pacman/pkg/gamescope-3.13.16-1-x86_64.pkg.tar.zst
sudo pacman -Qs libdisplay
sudo pacman -Qs libdisplay-info
sudo pacman -Ss libdisplay-info
sudo pacman -U https://archive.archlinux.org/packages/l/libdisplay-info/libdisplay-info-0.1.1-3-x86_64.pkg.tar.zst
pacman -U https://archive.archlinux.org/packages/l/libdisplay-info/libdisplay-info-0.1.1-3-x86_64.pkg.tar.zst
sudo pacman -U file:///var/cache/pacman/pkg/gamescope-3.13.16-1-x86_64.pkg.tar.zst
sudo pacman -S libdisplay-info
sudo pacman -S gamescope
sudo pacman -s mutter
sudo pacman -S mutter
gamescope --version
gamescope -- vkcube
/usr/bin/gamescope -e --default-touch-mode 4 --hide-cursor-delay 3000 --fade-out-duration 200 -R /run/user/1000/gamescope.bg228Us/startup.socket -T /run/user/1000/gamescope.bg228Us/stats.pipe -- steam -gamepadui -steamos3 -steampal -steamdeck
sudo pacman -Rns gamescope
downgrade gamescope
sudo downgrade gamescope
vkroots
gamescope --backend sdl -w 1920 -h 1080 -W 2560 -H 1440 -F fsr -r 165 -- vkcube
wget https://github.com/ValveSoftware/gamescope/archive/refs/tags/3.13.16.9.zip
mkdir gamescope
mv 3.13.16.9.zip gamescope
unzip 3.13.16.9.zip
cd gamescope-3.13.16.9
meson setup build
meson install -C build
meson install -C
git submodule update
cd subprojects
l vkroots
ls vkroots
cd vkroots
rm -rf *
git clone --depth 1 --branch 3.13.16.9 https://github.com/ValveSoftware/gamescope
cd gamescope
git submodule update --init
sudo pacman -S wayland
sudo pacman -S --needed eudev-libudev-devel libdrm-devel libgbm-devel libglvnd-devel libinput-devel libseat-devel libxcb-devel libxkbcommon-devel pixman-devel wayland-devel wayland-protocols xcb-util-cursor-devel xcb-util-devel xcb-util-errors-devel xcb-util-image-devel xcb-util-keysyms-devel xcb-util-renderutil-devel xcb-util-wm-devel xcb-util-xrm-devel xorg-server-xwayland pkg-config
meson build
gamemoderun
sudo pacman -S gamemode
sudo pacman -S lib32-gamemode
cd johninstall/l
cd johninstall/
nvim ~/.config/johninstall/out.log
nvim ~/.config/johninstall/conf.json
cd johninstall
nger
git clone https://github.com/joswinjohn/Jengine
cd Jengine2D
sudo pacman -S glad
cd App
nvim Jengine.cpp
nvim Renderer.cpp
nvim VAO.cpp
nvim Shader.cpp
nvim EBO.cpp
cd Source
cd Headers
grep -rnw ./ -e 'glad'
sudo pacman -S glm
nvim Jengine.h
cd ../...
cd ../../..
mv Jengine Jengine-old
mkdir Jengine
rm -rf Jengine
cmake-init
mv source src
rm -rf test
rm -rf docs
rm CONTRIBUTING.md
rm HACKING.md
rm BUILDING.md
rm CODE_OF_CONDUCT.md
cd cmake
nvim lint.cmake
nvim lint-targets.cmake
grep -rnw ./ -e 'src'
grep -rnw ./ -e 'source'
locate vcpkg.cmake
cp $VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake .
vcpkg add port glfw3
mkdir build
vcpkg add port glm
vcpkg add port glad
vcpkg install
rm -rf .github
nvim main.c
nvime ../CMakeLists.txt
nvim ../CMakeLists.txt
cd vcpkg_installed
cd vcpkg
cd x64-linux
nvim glad.h
cmake ..
cmake --help
sudo pacman -Rns vcpk
sudo pacman -Rns vcpkg
sudo pacman -R vcpkg
grep -rnw --max-depth
grep -rnw --depth
nvim .zshenv
rm .zshenv
grep -rnw ./ -e 'VCPKG_ROOT'
echo $0
echo $VCPKG_ROOT
nvim .zshrc
echo $PATH
nvim vcpkg.cmake
mkdir lib
mkdir external
git clone https://github.com/Dav1dde/glad
rm -rf glad
wget 'https://glad.dav1d.de/#language=c&specification=gl&api=gl%3D4.6&api=gles1%3D1.0&api=gles2%3D3.2&api=glsc2%3Dnone&profile=core&loader=on'
rm index.html
cd external
wget https://glad.dav1d.de/generated/tmpo5nod_bsglad/glad.zip
unzip glad.zip
rm glad.zip
mkdir glad
mv include glad
mv src glad
cd lib/external/glad/src
cd vcpkg_installed/x64-linux/lib
cd include
cd GLFW
cd debug
cd lib
cd share
cd glad
cd glfw3
cd git/Jengine
sudo pacman -S glfw
sudo pacman -S build-essential
vcpkg remove port glad
nvim vcpkg.json
rm vcpkg.cmake
sudo pacman -Qs opengl
sudo pacman -Rns glfw-wayland
sudo pacman -Rns wayland
cmake -B build
cd build
make
./Jengine
cp ~/johninstall/build.sh
cp ~/johninstall/build.sh .
zip
cd Music
cd Spotify\ Local
zip Travis\ Scott
mv Travis\ Scott travis
zip travis
mv travis "Travis Scott"
zip -r travis.zip Travis\ Scott
scp travis.zip joswin@136.56.13.220:/srv/http/files
rm travis.zip
ssh 136.56.13.220
nvim build.sh
pushd
podp
nvim src/main.cpp
emacs
sudo pacman -S sdl_mixer
figlet lil bro
figlet ur lil bro
figlet test tomorrow
figlet ur draggin it
figlet some of your love - partynextdoor
figlet theres parts of the song
figlet --help
figlet I dont think thats it
range
nvim ../Jengine-old
rm lib.cpp
rm lib.hpp
mkdir tmp
cd tmp
cmake-init Jengine
cd source
cp lib.cpp ~/git/Jengine/src
cp lib.hpp ~/git/Jengine/src
rm -rf tmp
autoload -Uz tetriscurses\
\

tetriscurses
brightnessctl
nvim i3/config
pkill picom
ps aux | grep 982
htop
ps aux | grep 931
artx
cd git/Jengine/l
git clone https://github.com/shreyankk/Lucrum
git clone https://github.com/joswinjohn/Lucrum
cd Lucrum/
rm -rf Lucrum
rm -rf wasm
rm -rf BrainrotLangC-web
rm -rf clean-polybar
rm -rf dotfiles
rm -rf edge-frfox
rm -rf gamescope
rm -rf Lain-linux-rice
rm -rf mc-onedark
rm -rf pygobject
rm -rf picom
rm -rf xborder
rm -rf ArcWTF
rm -rf rofi
rm -rf .dotfiles
cd Jen
nvim main.py
cd //
cd ~
cd git/Jengine/
nvim CMakeLists.txt
nvim glfw.cpp
cd .config
mv glfw.cpp glfw.hpp
nvim lib.hpp
../build.sh
cd Jengine/l
nvim ../.clang-tidy
nvim ../.clangd
nvim ../.clang-format
nvim lib.cpp
nvim main.cpp
./build.sh
cd Jengine/
nvim src
cd srv
pushd ~/tmp
rm glfw.html
cd /tmp
cd nvim.joswin
popd
nvim glfw
nvim glfw.hpp
rm -rf .git
git init
nvim .gitignore
git remote add origin https://github.com/joswinjohn/Jengine.git
cd Jengine-old
git pull
git checkout -b v1
git push -u origin main\

git push -u origin v1\

git checkout -b main
git commit -m "featrebased to cmake & full rewrite"
git commit -m "feat\!: rebased to cmake & full rewrite"
nvim README.md
git config commit.gpgsign true
gpg --full-gen-key
gpg --full-generate-key
gpg --list-secret-keys --keyid-format=long
gpg --armor --export A4931BE4EAA4E990
git config --global user.signingkey A4931BE4EAA4E990
git config --global commit.gpgsign true
git config --global tag.gpgSign true
[ -f ~/.zshrc ] && echo -e '\nexport GPG_TTY=$(tty)' >> ~/.zshrc
nvim ~/.zshrc
gitui
git add .
git commit -m "docs: update readme"
git push -u origin main
nvim ~/.gnupg/gpg-agent.conf
nvim ~/.gnupg/common.conf
cd ~/.gnupg
find . -name 'gpg-agent'
cd .gnupg
l private-keys-v1.d
l public-keys.d
l openpgp-revocs.d
nvim trustdb.gpg
nvim gpg-agent.cong
nvim gpg-agent.conf
nvim common.conf
cd git
cd Jengine
nvim .clang-tidy
cd src
ranger
l
dmesg | tail -50
sudo dmesg | tail -50
wipefs -a /dev/sda
reboot
parted
parted /dev/sda
fdisk /dev/sda
parted /dev/sda unit B print
mkdir /mnt/iso
mount /home/joswin/Downloads/Win11_24H2_English_x64.iso /mnt/iso/
sudo mount /home/joswin/Downloads/Win11_24H2_English_x64.iso /mnt/iso/
mkfs.vfat -n BOOT /dev/sda1
mkdir /mnt/vfat
mount /dev/sda1 /mnt/vfat/
sudo mount /dev/sda1 /mnt/vfat/
rsync -r --progress --exclude sources --delete-before /mnt/iso/ /mnt/vfat/
sudo rsync -r --progress --exclude sources --delete-before /mnt/iso/ /mnt/vfat/
mkdir /mnt/vfat/sources
sudo mkdir /mnt/vfat/sources
sudo cp /mnt/iso/sources/boot.wim /mnt/vfat/sources/
mkfs.ntfs --quick -L INSTALL /dev/sda2
mkdir /mnt/ntfs
umount /mnt/vfat
mount /dev/sda2 /mnt/ntfs
sudo mount /dev/sda2 /mnt/ntfs
ls /mnt/iso
sudo rsync -r --progress --delete-before /mnt/iso/ /mnt/ntfs/
umount /mnt/ntfs
sudo umount /mnt/ntfs
btop
ps aux | grep umount
ps cax | grep umount
mount
mount | grep dev
mount | grep dev/sda
mount | grep ntfs
sudo umount /mnt/vfat
umount /mnt/iso
sudo umount /mnt/iso
sync
udisksctl power-off -b /dev/sda
startx
c;ear
clear
lsblr
lsblk
: 1741910909:0;cd git
: 1741910910:0;l
: 1741910916:0;cp ~/.config -r .
